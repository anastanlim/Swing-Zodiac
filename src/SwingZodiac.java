/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author xiphoidex
 */
public class SwingZodiac extends javax.swing.JFrame {

    /**
     * Creates new form SwingZodiac
     */
    public SwingZodiac() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTanggal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtBulan = new javax.swing.JTextField();
        btnProses = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtzo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaDes = new javax.swing.JTextArea();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Data"));

        jLabel1.setText("Tanggal");

        txtTanggal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTanggalActionPerformed(evt);
            }
        });

        jLabel2.setText("Bulan");

        btnProses.setText("Proses");
        btnProses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProsesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBulan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnProses)
                .addGap(46, 46, 46))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtBulan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProses))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Deskripsi"));

        jLabel3.setText("Zodiac");

        txaDes.setColumns(20);
        txaDes.setRows(5);
        jScrollPane1.setViewportView(txaDes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtzo, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtzo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTanggalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTanggalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTanggalActionPerformed

    private void btnProsesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProsesActionPerformed
       int tanggal = Integer.valueOf(txtTanggal.getText());
     
       int bulan = Integer.valueOf(txtBulan.getText());
       
       if ( tanggal>=21&& bulan==3 || tanggal<=20 && bulan==4){
           txtzo.setText("ARIES (21 Maret â€“ 20 April)");
           
           txaDes.setText("- Sifat Umum : suka menonjolkan diri, senang beraktifitas, menyukai kepemimpinan.\n" +
"- Sifat Negatif : sombong, suka bertengkar, cepat marah, berbuat tolol.\n" +
"- Sifat Positif : pemberani/penentang, berani mengambil inisiatif.");
       }
       if ( tanggal>=21&& bulan==4 || tanggal<=20 && bulan==5){
           txtzo.setText("TAURUS (21 April - 20 Mei");
           txaDes.setText("- Sifat Umum : suka hak milik dan tanah, menyukai kesenangan fisik.\n" +
"- Sifat Negatif : keras kepala susah ditundukkan, tidak bisa mengendalikan diri, sangat bernafsu pada uang.\n" +
"- Sifat Positif : kuat, ulet dan tabah, tidak mau bergantung pada orang lain.");
           
       }
       if ( tanggal>=21&& bulan==5 || tanggal<=20 && bulan==6) {
           txtzo.setText("GEMINI (21 Mei - 20 Jun)");
           txaDes.setText("- Sifat Umum : menjadi penjual jasa atau ide, senang komunikasi dan masalah kesusastraan.\n" +
"- Sifat Negatif : picik, senang menyelidiki, dalam segala sesuatu tidak ada kesinambungan.\n" +
"- Sifat Positif : cakap dalam berbagai bidang, bijaksana dan tahan mentalnya.");
       }
       if ( tanggal>=21&& bulan==6 || tanggal<=20 && bulan==7) { 
       txtzo.setText("CANCER (21 Jun - 22 Jul)");
       txaDes.setText("- Sifat Umum : sangat peduli dalam urusan rumah dan keluarga, senang mengumpulkan benda berharga, sentimentil.\n" +
"- Sifat Negatif : mudah tersinggung, pemurung dan pemarah.\n" +
"- Sifat Positif : simpatik, keibuan/kebapakan, peka perasaannya.");
       }
       if ( tanggal>=21&& bulan==7 || tanggal<=20 && bulan==8){
           txtzo.setText("Leo (21 jul - 20 augustus");
           txaDes.setText("- Sifat Umum : suka mengatur dan memerintah, menyukai media dan usaha kreatif, mengorganisir yang lain.\n" +
"- Sifat Negatif : jaminan perlindungan yang berlebihan, sombong.\n" +
"- Sifat Positif : murah hati, periang, dan bersemangat tinggi.");
       }
          if ( tanggal>=21&& bulan==8 || tanggal<=20 && bulan==9){ 
          txtzo.setText("VIRGO (23 Aug - 22 Sep)");
          txaDes.setText("- Sifat Umum : bekerja cepat dan tepat, sehat dan higienis, suka menganalisa yang lain.\n" +
"- Sifat Negatif : senang menjauhkan diri, mengeritik dan menyukai kesempurnaan.\n" +
"- Sifat Positif : rendah hati dan suka melayani orang lain.");
          }
          if ( tanggal>=21&& bulan==9 || tanggal<=20 && bulan==10)  {
              txtzo.setText("LIBRA (23 Sep - 22 Oct)");
              txaDes.setText("- Sifat Umum : menyenangi ide estetika, dalam seni dan lingkungan kerja yang berorientasi kemasyarakatan, adil pada siapa saja\n" +
"- Sifat Negatif : lamban dalam bekerja, tidak berani mengambil keputusan, selalu merinduka n kedamaian.\n" +
"- Sifat Positif : senang bekerjasama dengan siapa saja, jujr dan menyukai diplomasi.");
              
          }
          if ( tanggal>=21&& bulan==10 || tanggal<=20 && bulan==11) {
              txtzo.setText("SCORPIO (23 Oct - 22 Nov)");
              txaDes.setText("- Sifat Umum : penuh misteri atau rahasia, menyukai problema dan riset.\n" +
"- Sifat Negatif : pencemburu, suka berfikir kebencian, dan pendendam.\n" +
"- Sifat Positif : menentukan, meresapi kalbu, dan berpostur gagah.");
              
          }
          if ( tanggal>=21&& bulan==11 || tanggal<=20 && bulan==12) {
              txtzo.setText("SAGITARIUS (23 Nov - 21 Dec)");
              txaDes.setText("- Sifat Umum : pengembara, mengejar filsafat, menyukai penelitian.\n" +
"- Sifat Negatif : sombong dan sering lengah (tidak waspada).\n" +
"- Sifat Positif : idealis, suka berterus terang, dan selalu gembira.");
              
          }
          if ( tanggal>=21&& bulan==12 || tanggal<=20 && bulan==1) {
              txtzo.setText("CAPRICORN (22 Dec - 19 Jan)");
              txaDes.setText("- Sifat Umum : mengejar keuntungan bisnis (fiansial) dan status social.\n" +
"- Sifat Negatif : matrealistis\n" +
"- Sifat Positif : suka kerapihan respek terhadap tradisi dan hati-hati.");
              
          }
          if ( tanggal>=21&& bulan==1 || tanggal<=20 && bulan==2) {
              txtzo.setText("AQUARIUS (20 Jan - 19 Feb)");
              txaDes.setText("- Sifat Umum : mengejar segi kemanusiaan dan pengetahuan, menyukai aktifitas kelompok.\n" +
"- Sifat Negatif : eksentrik, berjiwa pemberontak, dan fanatic.\n" +
"- Sifat Positif : respek terhadap kebebasan diri atau orang lain, menyukai persahabatan.");
              
          }
          if ( tanggal>=21&& bulan==2 || tanggal<=20 && bulan==3) {
              txtzo.setText("PISCES (20 Feb - 20 Mar)");
              txaDes.setText("- Sifat Umum : menyukai hal-hal spiritual, kesenian dan lautan.\n" +
"- Sifat Negative : sentimental, menghindari resiko.\n" +
"- Sifat Positif : ramah berimajinasi dan tidak mau menilai orang lain.");
              
          }
    }//GEN-LAST:event_btnProsesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SwingZodiac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SwingZodiac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SwingZodiac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SwingZodiac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SwingZodiac().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProses;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txaDes;
    private javax.swing.JTextField txtBulan;
    private javax.swing.JTextField txtTanggal;
    private javax.swing.JTextField txtzo;
    // End of variables declaration//GEN-END:variables
}
